version: "3.5"
services:
  # docker-compose up -d
  # ----------------------------------------
  # MEDNA-METADATA-POSTGIS
  # ----------------------------------------
  medna-metadata-pgdb:
    restart: always
    image: postgis/postgis:12-master
    container_name: medna-metadata-pgdb
    ports:
      - '5432:5432'     # expose ports - HOST:CONTAINER
    env_file:
      - './medna.env.db'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data/'
 # ----------------------------------------
 # MEDNA-METADATA-RABBITMQ
 # ----------------------------------------
  medna-metadata-rabbitmq:
    restart: always
    image: rabbitmq:3-management
    container_name: medna-metadata-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - './medna.env'
    volumes:
      - 'rabbitmq_data:/var/lib/rabbitmq/'
      - 'rabbitmq_logs:/var/log/rabbitmq'
 # ----------------------------------------
 # MEDNA-METADATA
 # ----------------------------------------
  medna-metadata-web:
    restart: always
    build:
      context: '../'
      dockerfile: './docker/medna-metadata/prod/Dockerfile'
    container_name: medna-metadata-web
    ports:
      - '8000:8000'
    env_file:
      - './medna.env'
    volumes:
      - 'static_volume:./static/'
      - 'media_volume:./media/'
    depends_on:
      - medna-metadata-pgdb
      - medna-metadata-rabbitmq
 # ----------------------------------------
 # MEDNA-METADATA-CELERYWORKER
 # ----------------------------------------
  medna-metadata-celeryworker:
    build:
      context: '../'
      dockerfile: './docker/web/prod/Dockerfile'
    image: medna-metadata-celeryworker
    command: /home/django/medna-metadata/celeryworker_start.sh
    env_file:
      - './medna.env'
    depends_on:
      - medna-metadata-rabbitmq
      - medna-metadata-pgdb
 # ----------------------------------------
 # MEDNA-METADATA-CELERYBEAT
 # ----------------------------------------
  medna-metadata-celerybeat:
    build:
      context: '../'
      dockerfile: './docker/web/prod/Dockerfile'
    image: medna-metadata-celerybeat
    command: /home/django/medna-metadata/celerybeat_start.sh
    env_file:
      - './medna.env'
    depends_on:
      - medna-metadata-rabbitmq
      - medna-metadata-pgdb
 # ----------------------------------------
 # NGINX-PROXY
 # ----------------------------------------
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - 'static_volume:./static/'
      - 'media_volume:./media/'
      - 'certs:/etc/nginx/certs'
      - 'html:/usr/share/nginx/html'
      - 'vhost:/etc/nginx/vhost.d'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
    depends_on:
      - medna-metadata-web
   # ----------------------------------------
   # NGINX-LETSENCRYPT
   # ----------------------------------------
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - './nginx.proxycompanion.env'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'certs:/etc/nginx/certs'
      - 'html:/usr/share/nginx/html'
      - 'vhost:/etc/nginx/vhost.d'
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost: